# install plug automatically
evaluate-commands %sh{
    plugins="$kak_config/plugins"
    mkdir -p "$plugins"
    [ ! -e "$plugins/plug.kak" ] && \
        git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
    printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}
plug "andreyorst/plug.kak" noload

plug "kak-lsp/kak-lsp" do %{
    cargo install --locked --force --path .
    # optional: if you want to use specific language servers
    mkdir -p ~/.config/kak-lsp
    cp -n kak-lsp.toml ~/.config/kak-lsp/
}

# show line number
add-highlighter global/ number-lines
# wrap line to new line if length exceed
add-highlighter global/ wrap

# additional hotkey 'jj' equivalent to <esc> in insert mode
hook global InsertChar j %{ try %{
  exec -draft hH <a-k>jj<ret> d
  exec <esc>
}}


# sharing clipboard between kakoune clients
hook global RegisterModified '"' %{ nop %sh{
  printf %s "$kak_main_reg_dquote" | xclip -in -selection clipboard >&- 2>&-
}}
map global user P '!xclip -out -selection clipboard<ret>'
map global user p '<a-!>xclip -out -selection clipboard<ret>'
map global user R '|xclip -out -selection clipboard<ret>'

# plug smarttab for indentation and align with spaces 
plug "andreyorst/smarttab.kak"

# default indentation
set-option global tabstop     4
set-option global indentwidth 4
hook global BufOpenFile .* expandtab
hook global BufNewFile  .* expandtab

# default aliases
set-option global grepcmd 'ag --column'

colorscheme desertex

hook global WinSetOption filetype=(c|cpp) %{
    clang-enable-autocomplete 
    clang-enable-diagnostics
    alias window lint clang-parse
    alias window lint-next-error clang-diagnostics-next

    lsp-enable-window
    map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
}

hook global WinSetOption filetype=cpp %{
    set-option global tabstop     2
    set-option global indentwidth 2
}

hook global WinSetOption filetype=lua %{
    set-option global tabstop     2
    set-option global indentwidth 2
}

map global user e ':echo foo<ret>' -docstring 'useless print'
